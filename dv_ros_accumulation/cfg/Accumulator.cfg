#!/usr/bin/env python3

from dynamic_reconfigure.parameter_generator_catkin import *

PACKAGE = "dv_ros_accumulation"
gen = ParameterGenerator()

gen.add("accumulation_time", int_t, 0, "Time in ms to accumulate events over", 33, 1, 1000)
gen.add("accumulation_number", int_t, 0, "Number of events to accumlate for a frame", 100000, 1000, 10000000)
gen.add("synchronous_decay", bool_t, 0, "Decay at frame generation time", False)
gen.add("min_potential", double_t, 0, "Value at which to clip the integration", 0.0, 0.0, 1.0)
gen.add("max_potential", double_t, 0, "Value at which to clip the integration", 0.3, 0.0, 1.0)
gen.add("neutral_potential", double_t, 0, "Value to which the decay tends over time", 0.0, 0.0, 1.0)
gen.add("event_contribution", double_t, 0, "The contribution of a single event", 0.04, 0.0, 1.0)
gen.add("rectify_polarity", bool_t, 0, "All events have positive contribution", False)
gen.add("decay_param", double_t, 0, "Slope for linear decay, tau for exponential decay, time for step decay",
        default=1e+6, min=0.0, max=1e+10)

slice_method_enum = gen.enum([gen.const("TIME", int_t, 0, "Slice by time"),
                              gen.const("NUMBER", int_t, 1, "Slice by number of events")],
                             "Type of slicing of event stream for the accumulator")
gen.add("slice_method", int_t, 0,
        "Method for slicing events, elapsed time between frames or number of events per frame", 0, 0, 1,
        edit_method=slice_method_enum)

decay_method_enum = gen.enum([gen.const("None", int_t, 0, "No decay"),
                              gen.const("Linear", int_t, 1, "Linear decay"),
                              gen.const("Exponential", int_t, 2, "Exponential decay"),
                              gen.const("Step", int_t, 3, "Step decay"),
                              ],
                             "Decay function to apply")
gen.add("decay_function", int_t, 0,
        "The decay function to be used", 2, 0, 3,
        edit_method=decay_method_enum)

exit(gen.generate(PACKAGE, "accumulator", "Accumulator"))
